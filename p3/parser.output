Nonterminals useless in grammar

    decl
    varDecl
    type
    fnDecl
    fnbody
    formals
    stmt
    assignExp
    explist


Terminals unused in grammar

    AND
    ASSIGN
    BOOL
    BOOLPTR
    CHAR
    CHARPTR
    COMMA
    CROSS
    CROSSCROSS
    DASH
    DASHDASH
    ELSE
    EQUALS
    FROMCONSOLE
    IF
    INT
    INTPTR
    GREATER
    GREATEREQ
    LBRACE
    LCURLY
    LESS
    LESSEQ
    NOT
    NOTEQUALS
    OR
    RBRACE
    RCURLY
    RETURN
    SEMICOLON
    SLASH
    STAR
    TOCONSOLE
    VOID
    WHILE


Rules useless in grammar

   17 decl: varDecl SEMICOLON

   18 varDecl: type id

   19 type: INT
   20     | INTPTR
   21     | BOOL
   22     | BOOLPTR
   23     | CHAR
   24     | CHARPTR
   25     | VOID


Grammar

    0 $accept: program "end file"

    1 program: globals

    2 globals: %empty
    3        | globals term

    4 callExp: id LPAREN RPAREN

    5 term: lval
    6     | callExp
    7     | NULLPTR
    8     | INTLITERAL
    9     | STRLITERAL
   10     | CHARLIT
   11     | TRUE
   12     | FALSE

   13 lval: id
   14     | AT id
   15     | CARAT id

   16 id: ID


Terminals, with rules where they appear

    "end file" (0) 0
    error (256)
    AND <transToken> (258)
    AT <transToken> (259) 14
    ASSIGN <transToken> (260)
    BOOL <transToken> (261)
    BOOLPTR <transToken> (262)
    CARAT <transToken> (263) 15
    CHAR <transToken> (264)
    CHARLIT <transCharToken> (265) 10
    CHARPTR <transToken> (266)
    COMMA <transToken> (267)
    CROSS <transToken> (268)
    CROSSCROSS <transToken> (269)
    DASH <transToken> (270)
    DASHDASH <transToken> (271)
    ELSE <transToken> (272)
    EQUALS <transToken> (273)
    FALSE <transToken> (274) 12
    FROMCONSOLE <transToken> (275)
    ID <transIDToken> (276) 16
    IF <transToken> (277)
    INT <transToken> (278)
    INTLITERAL <transIntToken> (279) 8
    INTPTR <transToken> (280)
    GREATER <transToken> (281)
    GREATEREQ <transToken> (282)
    LBRACE <transToken> (283)
    LCURLY <transToken> (284)
    LESS <transToken> (285)
    LESSEQ <transToken> (286)
    LPAREN <transToken> (287) 4
    NOT <transToken> (288)
    NOTEQUALS <transToken> (289)
    NULLPTR <transToken> (290) 7
    OR <transToken> (291)
    RBRACE <transToken> (292)
    RCURLY <transToken> (293)
    RETURN <transToken> (294)
    RPAREN <transToken> (295) 4
    SEMICOLON <transToken> (296)
    SLASH <transToken> (297)
    STAR <transToken> (298)
    STRLITERAL <transStrToken> (299) 9
    TOCONSOLE <transToken> (300)
    TRUE <transToken> (301) 11
    VOID <transToken> (302)
    WHILE <transToken> (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program <transProgram> (50)
        on left: 1
        on right: 0
    globals <transDeclList> (51)
        on left: 2 3
        on right: 1 3
    callExp <transCallExp> (52)
        on left: 4
        on right: 6
    term <transExp> (53)
        on left: 5 6 7 8 9 10 11 12
        on right: 3
    lval <transExp> (54)
        on left: 13 14 15
        on right: 5
    id <transID> (55)
        on left: 16
        on right: 4 13 14 15


State 0

    0 $accept: • program "end file"

    $default  reduce using rule 2 (globals)

    program  go to state 1
    globals  go to state 2


State 1

    0 $accept: program • "end file"

    "end file"  shift, and go to state 3


State 2

    1 program: globals •
    3 globals: globals • term

    AT          shift, and go to state 4
    CARAT       shift, and go to state 5
    CHARLIT     shift, and go to state 6
    FALSE       shift, and go to state 7
    ID          shift, and go to state 8
    INTLITERAL  shift, and go to state 9
    NULLPTR     shift, and go to state 10
    STRLITERAL  shift, and go to state 11
    TRUE        shift, and go to state 12

    $default  reduce using rule 1 (program)

    callExp  go to state 13
    term     go to state 14
    lval     go to state 15
    id       go to state 16


State 3

    0 $accept: program "end file" •

    $default  accept


State 4

   14 lval: AT • id

    ID  shift, and go to state 8

    id  go to state 17


State 5

   15 lval: CARAT • id

    ID  shift, and go to state 8

    id  go to state 18


State 6

   10 term: CHARLIT •

    $default  reduce using rule 10 (term)


State 7

   12 term: FALSE •

    $default  reduce using rule 12 (term)


State 8

   16 id: ID •

    $default  reduce using rule 16 (id)


State 9

    8 term: INTLITERAL •

    $default  reduce using rule 8 (term)


State 10

    7 term: NULLPTR •

    $default  reduce using rule 7 (term)


State 11

    9 term: STRLITERAL •

    $default  reduce using rule 9 (term)


State 12

   11 term: TRUE •

    $default  reduce using rule 11 (term)


State 13

    6 term: callExp •

    $default  reduce using rule 6 (term)


State 14

    3 globals: globals term •

    $default  reduce using rule 3 (globals)


State 15

    5 term: lval •

    $default  reduce using rule 5 (term)


State 16

    4 callExp: id • LPAREN RPAREN
   13 lval: id •

    LPAREN  shift, and go to state 19

    $default  reduce using rule 13 (lval)


State 17

   14 lval: AT id •

    $default  reduce using rule 14 (lval)


State 18

   15 lval: CARAT id •

    $default  reduce using rule 15 (lval)


State 19

    4 callExp: id LPAREN • RPAREN

    RPAREN  shift, and go to state 20


State 20

    4 callExp: id LPAREN RPAREN •

    $default  reduce using rule 4 (callExp)
